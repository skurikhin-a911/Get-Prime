{"name": "Проверка Проверка https://dev-api.getprime.pro/api/v1/orders/create - Fixed_Nominal", "status": "failed", "statusDetails": {"message": "AssertionError: 'payment_url' не содержит 'dev-get.alfa-payment.ru', текущий URL: https://dev-get.alfa-payment.ru/payment/9ef6942c-d579-45a9-bd5c-03f89c4a0273\nassert 'dev-get.alfa-\\u043a\\u043apayment.ru' in 'https://dev-get.alfa-payment.ru/payment/9ef6942c-d579-45a9-bd5c-03f89c4a0273'", "trace": "self = <test_api.TestApiGet object at 0x00000223D4026340>\n\n    @pytest.mark.apitest\n    @allure.title(\"Проверка Проверка https://dev-api.getprime.pro/api/v1/orders/create - Fixed_Nominal\")\n    @allure.description(\"Позитивная проверка создания сертификата с фиксированым номиналом\")\n    def test_certificate_create_fixed_nominal(self):\n        url_create_order = os.getenv(\"url_create_order\")\n    \n        payload = {\n            \"buyer\": {\n                \"name\": \"Иван Иванов\",\n                \"email\": \"ivanov@example.com\",\n                \"phone\": \"+79991112233\"\n            },\n            \"order_certificates\": [\n                {\n                    \"design_uuid\": \"542f8ec8-75d1-46ce-8a07-6dfbbebc8581\",\n                    \"amount\": 1000000,\n                    \"is_gift\": True,\n                    \"send_now\": True,\n                    \"timezone_code\": \"MSK\",\n                    \"sender\": \"Иванов Иван Иванович\",\n                    \"message\": \"С днём рождения!\",\n                    \"recipient_name\": \"Алексей\",\n                    \"recipient_phone\": \"+79992223344\",\n                    \"recipient_email\": \"ivanov@example.com\",\n                    \"count\": 1\n                }\n            ]\n        }\n        headers = {\n            'Content-Type': 'application/json',\n            'Authorization': f'Bearer {access_token_frontend}'\n        }\n    \n        with allure.step(f\"Проверка {url_create_order}\"):\n            response = requests.post(url_create_order, json=payload, headers=headers)\n            assert response.status_code == 200, \"Статус код не 200\"\n            json_response = response.json()\n    \n        # Проверка статуса\n        with allure.step(\"Проверка что статус 'ОК'\"):\n            assert json_response[\"status\"] == \"OK\", \"Статус не 'ОК'\"\n    \n        # Новая проверка: наличие payment_url и его содержимое\n        with allure.step(\"Проверка наличия payment_url и его содержимого\"):\n            assert \"payment_url\" in json_response, \"В ответе отсутствует 'payment_url'\"\n            payment_url = json_response[\"payment_url\"]\n>           assert \"dev-get.alfa-ккpayment.ru\" in payment_url, \\\n                f\"'payment_url' не содержит 'dev-get.alfa-payment.ru', текущий URL: {payment_url}\"\nE           AssertionError: 'payment_url' не содержит 'dev-get.alfa-payment.ru', текущий URL: https://dev-get.alfa-payment.ru/payment/9ef6942c-d579-45a9-bd5c-03f89c4a0273\nE           assert 'dev-get.alfa-\\u043a\\u043apayment.ru' in 'https://dev-get.alfa-payment.ru/payment/9ef6942c-d579-45a9-bd5c-03f89c4a0273'\n\ntest_api.py:386: AssertionError"}, "description": "Позитивная проверка создания сертификата с фиксированым номиналом", "steps": [{"name": "Проверка https://dev-api.getprime.pro/api/v1/orders/create", "status": "passed", "start": 1753353793697, "stop": 1753353794448}, {"name": "Проверка что статус 'ОК'", "status": "passed", "start": 1753353794448, "stop": 1753353794448}, {"name": "Проверка наличия payment_url и его содержимого", "status": "failed", "statusDetails": {"message": "AssertionError: 'payment_url' не содержит 'dev-get.alfa-payment.ru', текущий URL: https://dev-get.alfa-payment.ru/payment/9ef6942c-d579-45a9-bd5c-03f89c4a0273\nassert 'dev-get.alfa-\\u043a\\u043apayment.ru' in 'https://dev-get.alfa-payment.ru/payment/9ef6942c-d579-45a9-bd5c-03f89c4a0273'\n", "trace": "  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\tests\\test_api.py\", line 386, in test_certificate_create_fixed_nominal\n    assert \"dev-get.alfa-ккpayment.ru\" in payment_url, \\\n"}, "start": 1753353794448, "stop": 1753353794448}], "start": 1753353793697, "stop": 1753353794450, "uuid": "c60496a1-398d-435c-862c-29047bd6cc08", "historyId": "5b9ba30d2abc1fecb78f5e3b23850087", "testCaseId": "5b9ba30d2abc1fecb78f5e3b23850087", "fullName": "tests.test_api.TestApiGet#test_certificate_create_fixed_nominal", "labels": [{"name": "tag", "value": "apitest"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiGet"}, {"name": "host", "value": "Robotek3000"}, {"name": "thread", "value": "9132-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}