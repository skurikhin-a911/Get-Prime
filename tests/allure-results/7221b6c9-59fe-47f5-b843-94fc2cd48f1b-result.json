{"name": "Проверка Проверка https://dev-api.getprime.pro/api/v1/certificates/catalog - TG-service", "status": "failed", "statusDetails": {"message": "AssertionError: Статус кода не 200\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code\n +    where <Response [403]> = <function get at 0x000001C831B480D0>(url='https://dev-api.getprime.pro/api/v1/certificates/catalog', headers={'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3NTI4Mjk4NjMsImV4cCI6MTc1MjkxNjI2MywiYXBpX2tleV9yb2xlIjoiVEdfU0VSVklDRSIsImFwaV9rZXlfdXVpZCI6IjUyNDA5NTJlLTQzYTQtNGFhNC05MTE3LTliNjg3MjhkNDYzYyIsInVzZXJfdHlwZSI6InRnX3NlcnZpY2UifQ.oWjhgJwveBI1jj76T263S4LyOoJRXVGDCQoMCxLJYPg'})\n +      where <function get at 0x000001C831B480D0> = requests.get", "trace": "self = <test_api.TestApiGet object at 0x000001C832395160>\n\n    @pytest.mark.apitest\n    @allure.title(\"Проверка Проверка https://dev-api.getprime.pro/api/v1/certificates/catalog - TG-service\")\n    @allure.description(\"валидная проверка catalog с ролью tg_service\")\n    def test_certificate_catalog_tg_service(self):\n        url_certificates_catalog = os.getenv(\"url_certificates_catalog\")\n        with allure.step(f\"Проверка {url_certificates_catalog} на 200\"):\n>           assert requests.get(url=url_certificates_catalog, headers={\"Authorization\": f\"Bearer {access_token_tg}\"}).status_code == 200, \"Статус кода не 200\"\nE           AssertionError: Статус кода не 200\nE           assert 403 == 200\nE            +  where 403 = <Response [403]>.status_code\nE            +    where <Response [403]> = <function get at 0x000001C831B480D0>(url='https://dev-api.getprime.pro/api/v1/certificates/catalog', headers={'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3NTI4Mjk4NjMsImV4cCI6MTc1MjkxNjI2MywiYXBpX2tleV9yb2xlIjoiVEdfU0VSVklDRSIsImFwaV9rZXlfdXVpZCI6IjUyNDA5NTJlLTQzYTQtNGFhNC05MTE3LTliNjg3MjhkNDYzYyIsInVzZXJfdHlwZSI6InRnX3NlcnZpY2UifQ.oWjhgJwveBI1jj76T263S4LyOoJRXVGDCQoMCxLJYPg'})\nE            +      where <function get at 0x000001C831B480D0> = requests.get\n\ntest_api.py:178: AssertionError"}, "description": "валидная проверка catalog с ролью tg_service", "steps": [{"name": "Проверка https://dev-api.getprime.pro/api/v1/certificates/catalog на 200", "status": "failed", "statusDetails": {"message": "AssertionError: Статус кода не 200\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code\n +    where <Response [403]> = <function get at 0x000001C831B480D0>(url='https://dev-api.getprime.pro/api/v1/certificates/catalog', headers={'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3NTI4Mjk4NjMsImV4cCI6MTc1MjkxNjI2MywiYXBpX2tleV9yb2xlIjoiVEdfU0VSVklDRSIsImFwaV9rZXlfdXVpZCI6IjUyNDA5NTJlLTQzYTQtNGFhNC05MTE3LTliNjg3MjhkNDYzYyIsInVzZXJfdHlwZSI6InRnX3NlcnZpY2UifQ.oWjhgJwveBI1jj76T263S4LyOoJRXVGDCQoMCxLJYPg'})\n +      where <function get at 0x000001C831B480D0> = requests.get\n", "trace": "  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\tests\\test_api.py\", line 178, in test_certificate_catalog_tg_service\n    assert requests.get(url=url_certificates_catalog, headers={\"Authorization\": f\"Bearer {access_token_tg}\"}).status_code == 200, \"Статус кода не 200\"\n"}, "start": 1752829865752, "stop": 1752829866058}], "start": 1752829865752, "stop": 1752829866059, "uuid": "5b019f02-f8ba-4a15-9dda-15401c2c4c71", "historyId": "c57756b5fd52ecbfab7e6126e5680793", "testCaseId": "c57756b5fd52ecbfab7e6126e5680793", "fullName": "tests.test_api.TestApiGet#test_certificate_catalog_tg_service", "labels": [{"name": "tag", "value": "apitest"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiGet"}, {"name": "host", "value": "Robotek3000"}, {"name": "thread", "value": "7072-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}