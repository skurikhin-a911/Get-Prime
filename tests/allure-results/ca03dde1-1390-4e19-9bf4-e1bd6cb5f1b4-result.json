{"name": "Проверка https://dev-api.getprime.pro/api/v1/orders/create - amount below max", "status": "failed", "statusDetails": {"message": "AssertionError: Текст не соответствует\nassert 'amount не может превышать значение: 10000000' == 'amount не может быть ниже значения: 10000'\n  \n  - amount не может быть ниже значения: 10000\n  ?                 ^   -----        ^\n  + amount не может превышать значение: 10000000\n  ?                 ^^^^ ++          ^       +++", "trace": "self = <test_api.TestApiGet object at 0x0000019318A49AC0>\n\n    @pytest.mark.apitest\n    @allure.title(\"Проверка https://dev-api.getprime.pro/api/v1/orders/create - amount below max\")\n    @allure.description(\"Негативная проверка поля amount, значение меньше минимальной планки \")\n    def test_certificate_amount_below_max(self):\n        url_create_order = os.getenv(\"url_create_order\")\n        headers = {\n            \"Authorization\": f\"Bearer {access_token_frontend}\",\n            \"Content-Type\": \"application/json\"\n        }\n    \n        # Выбираем один случайный face_uuid\n    \n        payload = {\n            \"buyer\": {\n                \"name\": \"Иван Иванов\",\n                \"email\": \"ivanov@example.com\",\n                \"phone\": \"+79991112233\"\n            },\n            \"order_certificates\": [\n                {\n                    \"design_uuid\": \"542f8ec8-75d1-46ce-8a07-6dfbbebc8581\",\n                    \"amount\": \"10000001\",\n                    \"is_gift\": 'true',\n                    \"send_now\": 'true',\n                    \"timezone_code\": \"{{timezone_code}}\",\n                    \"sender\": \"Иванов Иван Иванович\",\n                    \"message\": \"С днём рождения!\",\n                    \"recipient_name\": \"Алексей\",\n                    \"recipient_phone\": \"+79992223344\",\n                    \"recipient_email\": \"ivanov@example.com\",\n                    \"count\": 1\n                }\n            ]\n        }\n        with allure.step(f\"Проверка {url_create_order} на код 400\"):\n            response = requests.post(url_create_order, json=payload, headers=headers)\n            assert response.status_code == 400, \"Статус код не 400\"\n            json_response = response.json()\n        with allure.step(\n                f\"Проверка текста message. Ожидали текст 'amount не может быть ниже значения: 10000',\\\n                                 Получили текст '{json_response['message']}'\"):\n>           assert json_response[\n                       'message'] == \"amount не может быть ниже значения: 10000\", \"Текст не соответствует\"\nE           AssertionError: Текст не соответствует\nE           assert 'amount не может превышать значение: 10000000' == 'amount не может быть ниже значения: 10000'\nE             \nE             - amount не может быть ниже значения: 10000\nE             ?                 ^   -----        ^\nE             + amount не может превышать значение: 10000000\nE             ?                 ^^^^ ++          ^       +++\n\ntest_api.py:677: AssertionError"}, "description": "Негативная проверка поля amount, значение меньше минимальной планки ", "steps": [{"name": "Проверка https://dev-api.getprime.pro/api/v1/orders/create на код 400", "status": "passed", "start": 1753954140207, "stop": 1753954140435}, {"name": "Проверка текста message. Ожидали текст 'amount не может быть ниже значения: 10000',                                 Получили текст 'amount не может превышать значение: 10000000'", "status": "failed", "statusDetails": {"message": "AssertionError: Текст не соответствует\nassert 'amount не может превышать значение: 10000000' == 'amount не может быть ниже значения: 10000'\n  \n  - amount не может быть ниже значения: 10000\n  ?                 ^   -----        ^\n  + amount не может превышать значение: 10000000\n  ?                 ^^^^ ++          ^       +++\n", "trace": "  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\tests\\test_api.py\", line 677, in test_certificate_amount_below_max\n    assert json_response[\n"}, "start": 1753954140435, "stop": 1753954140435}], "start": 1753954140207, "stop": 1753954140436, "uuid": "6b4035b0-762f-4008-886f-df376413a915", "historyId": "517d82c52463d15979e950d14b82907c", "testCaseId": "517d82c52463d15979e950d14b82907c", "fullName": "tests.test_api.TestApiGet#test_certificate_amount_below_max", "labels": [{"name": "tag", "value": "apitest"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiGet"}, {"name": "host", "value": "Robotek3000"}, {"name": "thread", "value": "13292-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}