{"name": "Проверка https://dev-api.getprime.pro/api/v1/certificates/catalog - frontend", "status": "failed", "statusDetails": {"message": "AssertionError: Статус код не 200\nassert 200 == 2000\n +  where 200 = <Response [200]>.status_code\n +    where <Response [200]> = <function get at 0x000002C8609FB040>(url='https://dev-api.getprime.pro/api/v1/certificates/catalog', headers={'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3NTIxNDU3MDQsImV4cCI6MTc1MjIzMjEwNCwibWVyY2hhbnRfdXVpZCI6IjVmZTJlNzc1LTI2ZjItNDYwNi1hNmM0LTcyZWU5MTJiYzkzNCIsImFwaV9rZXlfcm9sZSI6IkZST05URU5EIiwiYXBpX2tleV91dWlkIjoiYWFmZTgxOWUtZTYzYy00MTBkLTgwZWItMjkyNzBmNDViMDYxIiwidXNlcl90eXBlIjoiZnJvbnRlbmQifQ.UtEl9IIrWO7TFQ7gc3Bdb0xeof1PMdEWYKkbT2eXkPI'})\n +      where <function get at 0x000002C8609FB040> = requests.get", "trace": "self = <test_api.TestApiGet object at 0x000002C8609FFEB0>\n\n    @pytest.mark.apitest\n    @allure.title(\"Проверка https://dev-api.getprime.pro/api/v1/certificates/catalog - frontend\")\n    @allure.description(\"Валидная проверка catalog с ролью frontend\")\n    def test_certificate_catalog_frontend(self):\n        url_certificates_catalog = os.getenv(\"url_certificates_catalog\")\n        with allure.step(f\"Проверка {url_certificates_catalog} на 200\"):\n>           assert requests.get(url=url_certificates_catalog, headers={\"Authorization\": f\"Bearer {access_token_frontend}\"}).status_code == 2000, \"Статус код не 200\"\nE           AssertionError: Статус код не 200\nE           assert 200 == 2000\nE            +  where 200 = <Response [200]>.status_code\nE            +    where <Response [200]> = <function get at 0x000002C8609FB040>(url='https://dev-api.getprime.pro/api/v1/certificates/catalog', headers={'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3NTIxNDU3MDQsImV4cCI6MTc1MjIzMjEwNCwibWVyY2hhbnRfdXVpZCI6IjVmZTJlNzc1LTI2ZjItNDYwNi1hNmM0LTcyZWU5MTJiYzkzNCIsImFwaV9rZXlfcm9sZSI6IkZST05URU5EIiwiYXBpX2tleV91dWlkIjoiYWFmZTgxOWUtZTYzYy00MTBkLTgwZWItMjkyNzBmNDViMDYxIiwidXNlcl90eXBlIjoiZnJvbnRlbmQifQ.UtEl9IIrWO7TFQ7gc3Bdb0xeof1PMdEWYKkbT2eXkPI'})\nE            +      where <function get at 0x000002C8609FB040> = requests.get\n\ntest_api.py:167: AssertionError"}, "description": "Валидная проверка catalog с ролью frontend", "steps": [{"name": "Проверка https://dev-api.getprime.pro/api/v1/certificates/catalog на 200", "status": "failed", "statusDetails": {"message": "AssertionError: Статус код не 200\nassert 200 == 2000\n +  where 200 = <Response [200]>.status_code\n +    where <Response [200]> = <function get at 0x000002C8609FB040>(url='https://dev-api.getprime.pro/api/v1/certificates/catalog', headers={'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3NTIxNDU3MDQsImV4cCI6MTc1MjIzMjEwNCwibWVyY2hhbnRfdXVpZCI6IjVmZTJlNzc1LTI2ZjItNDYwNi1hNmM0LTcyZWU5MTJiYzkzNCIsImFwaV9rZXlfcm9sZSI6IkZST05URU5EIiwiYXBpX2tleV91dWlkIjoiYWFmZTgxOWUtZTYzYy00MTBkLTgwZWItMjkyNzBmNDViMDYxIiwidXNlcl90eXBlIjoiZnJvbnRlbmQifQ.UtEl9IIrWO7TFQ7gc3Bdb0xeof1PMdEWYKkbT2eXkPI'})\n +      where <function get at 0x000002C8609FB040> = requests.get\n", "trace": "  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\tests\\test_api.py\", line 167, in test_certificate_catalog_frontend\n    assert requests.get(url=url_certificates_catalog, headers={\"Authorization\": f\"Bearer {access_token_frontend}\"}).status_code == 2000, \"Статус код не 200\"\n"}, "start": 1752145707053, "stop": 1752145707322}], "start": 1752145707053, "stop": 1752145707323, "uuid": "918a83c8-f3f3-4b7d-907f-5b08b80adc50", "historyId": "f0ce8a0833a21525a91520c061f6056a", "testCaseId": "f0ce8a0833a21525a91520c061f6056a", "fullName": "tests.test_api.TestApiGet#test_certificate_catalog_frontend", "labels": [{"name": "tag", "value": "apitest"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiGet"}, {"name": "host", "value": "Robotek3000"}, {"name": "thread", "value": "2920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}