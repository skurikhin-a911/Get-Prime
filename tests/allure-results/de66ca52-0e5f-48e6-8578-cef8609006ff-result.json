{"name": "Проверка https://dev-api.getprime.pro/api/v1/orders/create - Check face uuid", "status": "failed", "statusDetails": {"message": "AssertionError: Статус код не 200, а 400\nassert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <test_api.TestApiGet object at 0x000002A7066D00D0>\n\n    @pytest.mark.apitest\n    @allure.title(\"Проверка https://dev-api.getprime.pro/api/v1/orders/create - Check face uuid\")\n    @allure.description(\"Позитивная проверка создания сертификата с отсроченной доставкой\")\n    def test_certificate_send_later(self):\n        url_create_order = os.getenv(\"url_create_order\")\n    \n    \n        headers = {\n            \"Authorization\": f\"Bearer {access_token_frontend}\",\n            \"Content-Type\": \"application/json\"\n        }\n    \n        for face_uuid in face_uuids:\n            payload = {\n                \"buyer\": {\n                    \"name\": \"Иван Иванов\",\n                    \"email\": \"ivanov@example.com\",\n                    \"phone\": \"+79991112233\"\n                },\n                \"order_certificates\": [\n                    {\n                        \"design_uuid\": \"542f8ec8-75d1-46ce-8a07-6dfbbebc8581\",\n                        \"face_uuid\": face_uuid,  # передаем по одному uuid\n                        \"amount\": 10000,\n                        \"is_gift\": 'true',\n                        \"send_now\": 'true',\n                        \"timezone_code\": \"MSK\",\n                        \"sender\": \"Иванов Иван Иванович\",\n                        \"message\": \"С днём рождения!\",\n                        \"delivery_time\": \"2024-01-09T11:50:26+00:00\",\n                        \"recipient_name\": \"Алексей\",\n                        \"recipient_phone\": \"+79992223344\",\n                        \"recipient_email\": \"ivanov@example.com\",\n                        \"count\": 1\n                    }\n                ]\n            }\n    \n            response = requests.post(url_create_order, json=payload, headers=headers)\n            print(f\"Отправка для face_uuid: {face_uuid}\")\n            print(payload)\n    \n            # --- Проверки ---\n>           assert response.status_code == 200, f\"Статус код не 200, а {response.status_code}\"\nE           AssertionError: Статус код не 200, а 400\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\ntest_api.py:547: AssertionError"}, "description": "Позитивная проверка создания сертификата с отсроченной доставкой", "attachments": [{"name": "stdout", "source": "8cc9c64c-73d6-42b3-96ea-1078f162064f-attachment.txt", "type": "text/plain"}], "start": 1753847323597, "stop": 1753847323827, "uuid": "602db3eb-6453-449d-832d-f3a0aaa58b55", "historyId": "ebe0ce9901c9f4c1bf61aca86b38b4a2", "testCaseId": "ebe0ce9901c9f4c1bf61aca86b38b4a2", "fullName": "tests.test_api.TestApiGet#test_certificate_send_later", "labels": [{"name": "tag", "value": "apitest"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiGet"}, {"name": "host", "value": "Robotek3000"}, {"name": "thread", "value": "11776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}