{"name": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ https://dev-api.getprime.pro/api/v1/certificates/catalog - Check Each URL", "status": "broken", "statusDetails": {"message": "TypeError: fail() got an unexpected keyword argument 'strict'", "trace": "self = <test_api.TestApiGet object at 0x0000026D3CDC52B0>\n\n    @pytest.mark.apitest\n    @allure.title(\"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ https://dev-api.getprime.pro/api/v1/certificates/catalog - Check Each URL\")\n    @allure.description(\"–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö url\")\n    def test_certificate_check_each_url(self):\n        url_certificates_catalog = os.getenv(\"url_certificates_catalog\")\n        with allure.step(f\"–ü—Ä–æ–≤–µ—Ä–∫–∞ {url_certificates_catalog} –Ω–∞ 200\"):\n            response = requests.get(url=url_certificates_catalog,\n                                    headers={\"Authorization\": f\"Bearer {access_token_frontend}\"})\n            assert response.status_code == 200, \"–°—Ç–∞—Ç—É—Å –∫–æ–¥ –Ω–µ 200\"\n    \n    \n        # failed_urls = []\n        # checked = 0\n        # passed_count = 0\n        #\n        # for url in urls_to_check:\n        #     print(f\"üîç –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è URL: {url}\")\n        #     try:\n        #         response = requests.get(url)\n        #         if response.status_code != 200:\n        #             failed_urls.append({\"url\": url, \"status\": response.status_code})\n        #         else:\n        #             passed_count += 1\n        #     except Exception as e:\n        #         failed_urls.append({\"url\": url, \"status\": str(e)})\n        #\n        #     checked += 1\n        #\n        # # –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö URL\n        # if checked == len(urls_to_check):\n        #     # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—Å–µ –≤–µ—Ä–Ω—É–ª–∏ 200\n        #     if len(failed_urls) == 0:\n        #         print(\"‚úÖ –í—Å–µ URL –≤–µ—Ä–Ω—É–ª–∏ 200 OK\")\n        #     else:\n        #         print(f\"‚ùå –ù–µ—É—Å–ø–µ—à–Ω—ã—Ö URL: {len(failed_urls)}\")\n        #         print(\"–û—à–∏–±–∫–∏ –ø–æ URL:\", failed_urls)\n        #\n        #     # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n        #     # print(f\"‚úÖ –£—Å–ø–µ—à–Ω–æ: {passed_count} / {len(urls_to_check)}\")\n    \n    \n            failed_urls = []\n            checked = 0\n            passed_count = 0\n    \n            for url in urls_to_check:\n                with allure.step(f\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è URL: {url}\"):\n                    try:\n                        response = requests.get(url)\n                        if response.status_code != 200:\n                            failed_urls.append({\"url\": url, \"status\": response.status_code})\n                        else:\n                            passed_count += 1\n                    except Exception as e:\n                        failed_urls.append({\"url\": url, \"status\": str(e)})\n    \n                    checked += 1\n    \n            # –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö URL\n            with allure.step(\"–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ URL\"):\n                if len(failed_urls) == 0:\n>                   pytest.fail(\"–í—Å–µ URL –≤–µ—Ä–Ω—É–ª–∏ 200 OK\", strict=False)\nE                   TypeError: fail() got an unexpected keyword argument 'strict'\n\ntest_api.py:359: TypeError"}, "description": "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö url", "steps": [{"name": "–ü—Ä–æ–≤–µ—Ä–∫–∞ https://dev-api.getprime.pro/api/v1/certificates/catalog –Ω–∞ 200", "status": "broken", "statusDetails": {"message": "TypeError: fail() got an unexpected keyword argument 'strict'\n", "trace": "  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\tests\\test_api.py\", line 359, in test_certificate_check_each_url\n    pytest.fail(\"–í—Å–µ URL –≤–µ—Ä–Ω—É–ª–∏ 200 OK\", strict=False)\n"}, "steps": [{"name": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è URL: https://cdn.getprime.pro/prod/merchants/moveli-5d6c1bee/logo/logo_2.png", "status": "passed", "start": 1753265658906, "stop": 1753265659299}, {"name": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è URL: https://cdn.getprime.pro/prod/merchants/moveli-5d6c1bee/designs/20.jpg", "status": "passed", "start": 1753265659299, "stop": 1753265659684}, {"name": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è URL: https://cdn.getprime.pro/prod/merchants/moveli-5d6c1bee/designs/10.jpg", "status": "passed", "start": 1753265659684, "stop": 1753265660540}, {"name": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è URL: https://cdn.getprime.pro/prod/merchants/moveli-5d6c1bee/designs/30.jpg", "status": "passed", "start": 1753265660540, "stop": 1753265661062}, {"name": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è URL: https://cdn.getprime.pro/prod/merchants/moveli-5d6c1bee/designs/40.jpg", "status": "passed", "start": 1753265661062, "stop": 1753265661826}, {"name": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è URL: https://cdn.getprime.pro/prod/merchants/moveli-5d6c1bee/designs/50.jpg", "status": "passed", "start": 1753265661826, "stop": 1753265662358}, {"name": "–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ URL", "status": "broken", "statusDetails": {"message": "TypeError: fail() got an unexpected keyword argument 'strict'\n", "trace": "  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\tests\\test_api.py\", line 359, in test_certificate_check_each_url\n    pytest.fail(\"–í—Å–µ URL –≤–µ—Ä–Ω—É–ª–∏ 200 OK\", strict=False)\n"}, "start": 1753265662359, "stop": 1753265662359}], "start": 1753265658631, "stop": 1753265662359}], "start": 1753265658631, "stop": 1753265662359, "uuid": "948f703c-15e3-44bb-9500-0311dc516b38", "historyId": "71c2663e9d9adae8827f8508d221aaf0", "testCaseId": "71c2663e9d9adae8827f8508d221aaf0", "fullName": "tests.test_api.TestApiGet#test_certificate_check_each_url", "labels": [{"name": "tag", "value": "apitest"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiGet"}, {"name": "host", "value": "Robotek3000"}, {"name": "thread", "value": "12428-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}