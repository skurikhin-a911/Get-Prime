{"name": "Проверка https://dev-api.getprime.pro/api/v1/auth - TG_SERVICE", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidHeader: Header part ({'5240952e-43a4-4aa4-9117-9b68728d463c'}) from ('X-API-Key', {'5240952e-43a4-4aa4-9117-9b68728d463c'}) must be of type str or bytes, not <class 'set'>", "trace": "self = <test_api.TestApiGet object at 0x000001A66AF29040>\n\n    @pytest.mark.apitest\n    @allure.title(\"Проверка https://dev-api.getprime.pro/api/v1/auth - TG_SERVICE\")\n    @allure.description(\"Валидная проверка с передачей ключа tg service\")\n    def test_auth_tg_service(self):\n        tg_service_key = os.getenv(\"tg_service_key\")\n        url = \"https://dev-api.getprime.pro/api/v1/auth\"\n        with allure.step(f\"Проверка {url} на код 200\"):\n>           assert requests.post(url=url, headers={'X-API-Key': {tg_service_key}}).status_code == 200, \"Статус код не 200\"\n\ntest_api.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\venv\\lib\\site-packages\\requests\\api.py:115: in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\n..\\venv\\lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n..\\venv\\lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\n..\\venv\\lib\\site-packages\\requests\\sessions.py:484: in prepare_request\n    p.prepare(\n..\\venv\\lib\\site-packages\\requests\\models.py:368: in prepare\n    self.prepare_headers(headers)\n..\\venv\\lib\\site-packages\\requests\\models.py:490: in prepare_headers\n    check_header_validity(header)\n..\\venv\\lib\\site-packages\\requests\\utils.py:1032: in check_header_validity\n    _validate_header_part(header, value, 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nheader = ('X-API-Key', {'5240952e-43a4-4aa4-9117-9b68728d463c'})\nheader_part = {'5240952e-43a4-4aa4-9117-9b68728d463c'}\nheader_validator_index = 1\n\n    def _validate_header_part(header, header_part, header_validator_index):\n        if isinstance(header_part, str):\n            validator = _HEADER_VALIDATORS_STR[header_validator_index]\n        elif isinstance(header_part, bytes):\n            validator = _HEADER_VALIDATORS_BYTE[header_validator_index]\n        else:\n>           raise InvalidHeader(\n                f\"Header part ({header_part!r}) from {header} \"\n                f\"must be of type str or bytes, not {type(header_part)}\"\n            )\nE           requests.exceptions.InvalidHeader: Header part ({'5240952e-43a4-4aa4-9117-9b68728d463c'}) from ('X-API-Key', {'5240952e-43a4-4aa4-9117-9b68728d463c'}) must be of type str or bytes, not <class 'set'>\n\n..\\venv\\lib\\site-packages\\requests\\utils.py:1041: InvalidHeader"}, "description": "Валидная проверка с передачей ключа tg service", "steps": [{"name": "Проверка https://dev-api.getprime.pro/api/v1/auth на код 200", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidHeader: Header part ({'5240952e-43a4-4aa4-9117-9b68728d463c'}) from ('X-API-Key', {'5240952e-43a4-4aa4-9117-9b68728d463c'}) must be of type str or bytes, not <class 'set'>\n", "trace": "  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\tests\\test_api.py\", line 87, in test_auth_tg_service\n    assert requests.post(url=url, headers={'X-API-Key': {tg_service_key}}).status_code == 200, \"Статус код не 200\"\n  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\venv\\lib\\site-packages\\requests\\api.py\", line 115, in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\n  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\venv\\lib\\site-packages\\requests\\api.py\", line 59, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\venv\\lib\\site-packages\\requests\\sessions.py\", line 575, in request\n    prep = self.prepare_request(req)\n  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\venv\\lib\\site-packages\\requests\\sessions.py\", line 484, in prepare_request\n    p.prepare(\n  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\venv\\lib\\site-packages\\requests\\models.py\", line 368, in prepare\n    self.prepare_headers(headers)\n  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\venv\\lib\\site-packages\\requests\\models.py\", line 490, in prepare_headers\n    check_header_validity(header)\n  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\venv\\lib\\site-packages\\requests\\utils.py\", line 1032, in check_header_validity\n    _validate_header_part(header, value, 1)\n  File \"C:\\Users\\Qasquad1\\PycharmProjects\\GetPrime\\venv\\lib\\site-packages\\requests\\utils.py\", line 1041, in _validate_header_part\n    raise InvalidHeader(\n"}, "start": 1752034957519, "stop": 1752034957521}], "start": 1752034957519, "stop": 1752034957522, "uuid": "ae3fd514-78f1-40e2-82e0-e880a10a9684", "historyId": "e802b660dc1d82bc4d54fe307d3529c3", "testCaseId": "e802b660dc1d82bc4d54fe307d3529c3", "fullName": "tests.test_api.TestApiGet#test_auth_tg_service", "labels": [{"name": "tag", "value": "apitest"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestApiGet"}, {"name": "host", "value": "Robotek3000"}, {"name": "thread", "value": "11896-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}